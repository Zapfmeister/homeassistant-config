#      name: Demo Floorplan
#      image: /local/custom_ui/floorplan/floorplan.svg
#      stylesheet: /local/custom_ui/floorplan/floorplan.css
name: Downstairs
image: /local/custom_ui/floorplan/downstairs.svg
stylesheet: /local/custom_ui/floorplan/floorplan.css

#      
#      # These options are optional
#      # warnings:                  # enable warnings (to find out why things might ot be working correctly)
#      # pan_zoom:                  # enable experimental panning / zooming
#      # hide_app_toolbar:          # hide the application toolbar (when used as a custom panel)
#      # date_format: DD-MMM-YYYY   # Date format to use in hover-over text
warnings: true

#      last_motion_entity: sensor.template_last_motion
#      last_motion_class: last-motion
#
groups:
  - name: Door Switchs
    entities:
      - binary_sensor.door_sensor_1_sensor
      - binary_sensor.visonic_mct340_e_0b111ae3_1
      - binary_sensor.visonic_mct340_e_0b0023ed_1
    states:
      - state: 'off'
        class: 'door-closed'
      - state: 'on'
        class: 'door-open'
#    state_transitions:
#      - name: On to off
#        from_state: 'on'
#        to_state: 'off'
#        duration: 2 

  - name: Garage Door Switch
    entities:
      - binary_sensor.ecolink_garage_door_tilt_sensor_sensor
    states:
      - state: 'off'
        class: 'door-closed'
      - state: 'on'
        class: 'door-open'
    action:
      domain: switch
      service: turn_on


  - name: Outside Weather
    entities:
      - sensor.dark_sky_weather_temperature
    #text_template: '${entity.state ? entity.state : "unknown"}'
    # An example of rounding up a number, i.e. a temperature of 90.1 becomes 91
    text_template: '${entity.state ? Math.ceil(entity.state) : "undefined"}째'
    class_template: '
      var temp = parseFloat(entity.state.replace("째", ""));
      if (temp < 50)
        return "temp-low";
      else if (temp < 78)
        return "temp-medium";
      else
        return "temp-high";
      '

  - name: Outside Weather Icon
    entities:
      - sensor.dark_sky_weather_summary
    image_template: '${entity.attributes.entity_picture ? entity.attributes.entity_picture : "undefined"}'

  - name: Thermostat
    entities:
      - sensor.2gig_technologies_ct101_thermostat_iris_temperature
    text_template: '${entity.state ? entity.state : "undefined"}'
 
#  - name: Temperatures
#    entities:
#      - sensor.smartthings_multiv4_01042e9f_1
#    text_template: '${entity.state ? Math.round(entity.state, "3") : "undefined"}째'

#      groups:
#
#        - name: Sensors
#          entities:
#             -  sensor.dark_sky_temperature
#          #text_template: '${entity.state ? entity.state : "unknown"}'
#          # An example of rounding up a number, i.e. a temperature of 90.1 becomes 91
#          text_template: '${entity.state ? Math.ceil(entity.state) : "undefined"}'  
#          class_template: '
#            var temp = parseFloat(entity.state.replace("째", ""));
#            if (temp < 10)
#              return "temp-low";
#            else if (temp < 30)
#              return "temp-medium";
#            else
#              return "temp-high";
#            '
#
#        - name: Lights
#          entities:
#             - light.hallway
#             - light.living_room
#             - light.patio
#             - group.kitchen_lights
#             - group.living_room_lights
#          states:
#            - state: 'on'
#              class: 'light-on'
#            - state: 'off'
#              class: 'light-off'
#          action:
#            domain: homeassistant   # This optional parameter allows you to use other services such as homeassistant.toggle like here.
#            service: toggle
#
#        - name: Switches
#          entities:
#             - switch.doorbell
#          states:
#            - state: 'on'
#              class: 'doorbell-on'
#            - state: 'off'
#              class: 'doorbell-off'
#
#        - name: NVR
#          entities:
#             - binary_sensor.blue_iris_nvr
#          text_template: '${(entity.state === "on") ? "online" : "offline"}'
#          states:
#            - state: 'off'
#              class: 'danger-text'
#            - state: 'on'
#              class: 'success-text'
#
#        - name: Alarm Panel
#          entities:
#             - alarm_control_panel.alarm
#          states:
#            - state: 'armed_away'
#              class: 'alarm-armed'
#            - state: 'armed_home'
#              class: 'alarm-armed'
#            - state: 'disarmed'
#              class: 'alarm-disarmed'
#
#        - name: Binary sensors
#          entities:
#            - binary_sensor.front_hallway
#            - binary_sensor.kitchen
#            - binary_sensor.master_bedroom
#            - binary_sensor.theatre_room
#          states:
#            - state: 'off'
#              class: 'info-background'
#            - state: 'on'
#              class: 'warning-background'
#          state_transitions:
#            - name: On to off
#              from_state: 'on'
#              to_state: 'off'
#              duration: 10
#
#        - name: Cameras
#          entities:
#            - camera.hallway
#            - camera.driveway
#            - camera.front_door
#            - camera.backyard
#          states:
#            - state: 'idle'
#              class: 'camera-idle'
#              
#        - name: thermostat_temp
#          entities:
#            - climate.downstairs
#            - climate.upstairs
#          text_template: '${entity.attributes.current_temperature ? entity.attributes.current_temperature : "undefined"}'
#
# The above text_template uses extended attributes from the climate.* objects to get current temperature.

#        - name: text_states
#          entities:
#            - sensor.downstairs_thermostat_humidity
#            - sensor.dark_sky_temperature
#            - sensor.last_message
#          text_template: '${entity.state ? entity.state.replace(/\s{2,}/g,"") : "undefined"}'
#
# The above text_template uses jQuery syntax to search and replace any instance of 2 consecutive (or more) spaces in a string of text.
